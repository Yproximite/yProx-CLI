// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`api: configuration should load conf from \`package.json\` 1`] = `
Object {
  "assets": Object {
    "app": Array [
      Object {
        "dest": "dist/js",
        "destFile": "button.js",
        "handler": "rollup",
        "src": "src/components/button/index.js",
      },
      Object {
        "concat": "scripts.js",
        "dest": "dist/js",
        "handler": "js",
        "src": Array [
          "src/js/foo.js",
          "src/js/bar.js",
        ],
      },
      Object {
        "concat": "legacy-styles.css",
        "dest": "dist/css",
        "handler": "css",
        "src": Array [
          "src/css/foo.css",
          "src/css/bar.css",
        ],
      },
      Object {
        "dest": "dist/css",
        "destFile": "styles.css",
        "handler": "sass",
        "src": "src/sass/style.scss",
      },
      Object {
        "dest": "dist/images",
        "handler": "image",
        "name": "images to optimize",
        "src": "src/images/*",
      },
      Object {
        "dest": "dist/",
        "handler": "file",
        "name": "files to copy",
        "src": Array [
          "src/lorem.txt",
          "src/udhr.txt",
        ],
      },
    ],
  },
  "autoprefixer": Object {},
  "buble": Object {},
  "cssnano": Object {
    "autoprefixer": false,
    "safe": true,
  },
  "eslint": Object {
    "extensions": Array [
      ".js",
      ".vue",
    ],
  },
  "gifsicle": Object {
    "colors": 16,
    "interlaced": true,
    "optimizationLevel": 3,
  },
  "handlers": Object {
    "rollup": Object {
      "commonjs": Object {},
      "json": Object {},
      "nodeResolve": Object {},
      "shims": Object {},
      "vue": Object {},
    },
    "sass": Object {},
  },
  "jpegtran": Object {
    "progressive": true,
  },
  "optipng": Object {
    "optimizationLevel": 5,
  },
  "path": Object {},
  "svgo": Object {
    "plugins": Array [
      Object {
        "removeViewBox": true,
      },
    ],
  },
  "terser": Object {},
}
`;

exports[`api: configuration should load conf from \`yprox-cli.config.js\` 1`] = `
Object {
  "assets": Object {
    "app": Array [
      Object {
        "handler": "rollup",
        "src": "i-dont-exists/from-yprox-cli-config.js/index.js",
      },
    ],
  },
  "autoprefixer": Object {},
  "buble": Object {},
  "cssnano": Object {
    "autoprefixer": false,
    "safe": true,
  },
  "eslint": Object {
    "extensions": Array [
      ".js",
      ".vue",
    ],
  },
  "gifsicle": Object {
    "interlaced": true,
  },
  "handlers": Object {
    "rollup": Object {
      "commonjs": Object {},
      "json": Object {},
      "nodeResolve": Object {},
      "shims": Object {},
      "vue": Object {},
    },
    "sass": Object {},
  },
  "jpegtran": Object {
    "progressive": true,
  },
  "optipng": Object {
    "optimizationLevel": 5,
  },
  "path": Object {},
  "svgo": Object {
    "plugins": Array [
      Object {
        "removeViewBox": true,
      },
    ],
  },
  "terser": Object {},
}
`;

exports[`api: configuration with YPROX_CLI_IGNORE_CONFIG_FILE=true, should load config from \`package.json\` even if we have two config files 1`] = `
Object {
  "assets": Object {
    "app": Array [
      Object {
        "dest": "dist/js",
        "destFile": "button.js",
        "handler": "rollup",
        "src": "src/components/button/index.js",
      },
      Object {
        "concat": "scripts.js",
        "dest": "dist/js",
        "handler": "js",
        "src": Array [
          "src/js/foo.js",
          "src/js/bar.js",
        ],
      },
      Object {
        "concat": "legacy-styles.css",
        "dest": "dist/css",
        "handler": "css",
        "src": Array [
          "src/css/foo.css",
          "src/css/bar.css",
        ],
      },
      Object {
        "dest": "dist/css",
        "destFile": "styles.css",
        "handler": "sass",
        "src": "src/sass/style.scss",
      },
      Object {
        "dest": "dist/images",
        "handler": "image",
        "name": "images to optimize",
        "src": "src/images/*",
      },
      Object {
        "dest": "dist/",
        "handler": "file",
        "name": "files to copy",
        "src": Array [
          "src/lorem.txt",
          "src/udhr.txt",
        ],
      },
    ],
  },
  "autoprefixer": Object {},
  "buble": Object {},
  "cssnano": Object {
    "autoprefixer": false,
    "safe": true,
  },
  "eslint": Object {
    "extensions": Array [
      ".js",
      ".vue",
    ],
  },
  "gifsicle": Object {
    "colors": 16,
    "interlaced": true,
    "optimizationLevel": 3,
  },
  "handlers": Object {
    "rollup": Object {
      "commonjs": Object {},
      "json": Object {},
      "nodeResolve": Object {},
      "shims": Object {},
      "vue": Object {},
    },
    "sass": Object {},
  },
  "jpegtran": Object {
    "progressive": true,
  },
  "optipng": Object {
    "optimizationLevel": 5,
  },
  "path": Object {},
  "svgo": Object {
    "plugins": Array [
      Object {
        "removeViewBox": true,
      },
    ],
  },
  "terser": Object {},
}
`;

exports[`api: configuration with YPROX_CLI_IGNORE_PACKAGE_JSON_FILE=true, should load config from \`yprox-cli.config.js\` even if we have two config files 1`] = `
Object {
  "assets": Object {
    "app": Array [
      Object {
        "handler": "rollup",
        "src": "i-dont-exists/from-yprox-cli-config.js/index.js",
      },
    ],
  },
  "autoprefixer": Object {},
  "buble": Object {},
  "cssnano": Object {
    "autoprefixer": false,
    "safe": true,
  },
  "eslint": Object {
    "extensions": Array [
      ".js",
      ".vue",
    ],
  },
  "gifsicle": Object {
    "interlaced": true,
  },
  "handlers": Object {
    "rollup": Object {
      "commonjs": Object {},
      "json": Object {},
      "nodeResolve": Object {},
      "shims": Object {},
      "vue": Object {},
    },
    "sass": Object {},
  },
  "jpegtran": Object {
    "progressive": true,
  },
  "optipng": Object {
    "optimizationLevel": 5,
  },
  "path": Object {},
  "svgo": Object {
    "plugins": Array [
      Object {
        "removeViewBox": true,
      },
    ],
  },
  "terser": Object {},
}
`;
